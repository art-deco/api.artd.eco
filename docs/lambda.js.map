{
  "version": 3,
  "file": "docs/lambda.js",
  "lineCount": 27,
  "mappings": "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",
  "sources": [
    " [synthetic:es6/util/arrayiterator] ",
    " [synthetic:es6/util/makeiterator] ",
    " [synthetic:es6/util/arrayfromiterator] ",
    " [synthetic:util/objectcreate] ",
    " [synthetic:es6/util/setprototypeof] ",
    " [synthetic:es6/util/inherits] ",
    " [synthetic:util/global] ",
    " [synthetic:util/defineproperty] ",
    " [synthetic:util/polyfill] ",
    " [synthetic:es6/promise/promise] ",
    " [synthetic:es6/symbol] ",
    " [synthetic:es6/generator_engine] ",
    "/frontend/lambda.jsx",
    " [synthetic:es6/execute_async_generator] ",
    " [synthetic:es6/util/iteratorfromarray] ",
    " [synthetic:es6/array/values] ",
    " [synthetic:es6/object/entries] ",
    " [synthetic:util/owns] ",
    " [synthetic:util/checkstringargs] ",
    " [synthetic:es6/string/startswith] ",
    " [synthetic:es6/string/repeat] ",
    "/../node_modules/@externs/preact/src/index.js",
    "/../node_modules/@depack/form/build/help.js",
    "/../node_modules/@depack/form/build/lib/index.js",
    "/../node_modules/@depack/form/build/form-group.js",
    " [synthetic:es6/util/arrayfromiterable] ",
    "/../node_modules/unfetch/src/index.mjs",
    "/../node_modules/@depack/form/build/index.js",
    "/frontend/client.js"
  ],
  "sourcesContent": [
    "/*\n * Copyright 2016 The Closure Compiler Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Utility method for creating an iterator for Arrays.\n */\n'require base';\n\n/**\n * Returns an internal iterator from the given array.\n * @param {!Array<T>} array\n * @return {function():!IIterableResult<T>}\n * @template T\n */\n$jscomp.arrayIteratorImpl = function(array) {\n  var index = 0;\n  return function() {\n    if (index < array.length) {\n      return {\n        done: false,\n        value: array[index++],\n      };\n    } else {\n      return {done: true};\n    }\n  };\n};\n\n/**\n * Returns an internal iterator from the given array.\n * @param {!Array<T>} array\n * @return {!Iterator<T>}\n * @template T\n */\n$jscomp.arrayIterator = function(array) {\n  return /** @type {!Iterator<T>} */ ({next: $jscomp.arrayIteratorImpl(array)});\n};\n\n",
    "/*\n * Copyright 2016 The Closure Compiler Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Polyfill for for-of loops.\n */\n'require es6/util/arrayiterator';\n\n/**\n * Creates an iterator for the given iterable.  This iterator should never\n * be exposed to user code.\n *\n * @param {string|!Iterable<T>|!Iterator<T>|!Arguments} iterable\n * @return {!Iterator<T>}\n * @template T\n * @suppress {reportUnknownTypes}\n */\n$jscomp.makeIterator = function(iterable) {\n  // NOTE: Disabling typechecking because [] not allowed on @struct.\n  var iteratorFunction = typeof Symbol != 'undefined' && Symbol.iterator &&\n      (/** @type {?} */ (iterable)[Symbol.iterator]);\n  return iteratorFunction ? iteratorFunction.call(iterable) :\n      $jscomp.arrayIterator(/** @type {!Array} */ (iterable));\n};\n",
    "/*\n * Copyright 2016 The Closure Compiler Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Polyfill for array destructuring.\n */\n'require base';\n\n\n/**\n * Copies the values from an Iterator into an Array. The important difference\n * between this and $jscomp.arrayFromIterable is that if the iterator's\n * next() method has already been called one or more times, this method returns\n * only the values that haven't been yielded yet.\n * @param {!Iterator<T>} iterator\n * @return {!Array<T>}\n * @template T\n * @suppress {reportUnknownTypes}\n */\n$jscomp.arrayFromIterator = function(iterator) {\n  var i;\n  var arr = [];\n  while (!(i = iterator.next()).done) {\n    arr.push(i.value);\n  }\n  return arr;\n};\n",
    "/*\n * Copyright 2017 The Closure Compiler Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Provides a partial internal polyfill for Object.create.\n */\n'require util/defines';\n\n\n/**\n * Polyfill for Object.create() method:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/create\n *\n * Does not implement the second argument.\n * @param {!Object} prototype\n * @return {!Object}\n */\n$jscomp.objectCreate =\n    ($jscomp.ASSUME_ES5 || typeof Object.create == 'function') ?\n    Object.create :\n    function(prototype) {\n      /** @constructor */\n      var ctor = function() {};\n      ctor.prototype = prototype;\n      return new ctor();\n    };\n",
    "/*\n * Copyright 2017 The Closure Compiler Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview\n * @suppress {uselessCode}\n */\n\n/**\n * @suppress {missingProperties,reportUnknownTypes}\n * @return {boolean}\n */\n$jscomp.underscoreProtoCanBeSet = function() {\n  var x = {a: true};\n  var y = {};\n  try {\n    y.__proto__ = x;\n    return y.a;\n  } catch (e) {\n    // __proto__ property is readonly (possibly IE 10?)\n  }\n  return false;\n};\n\n/**\n * If we can implement it, this will be a function that attempts to set the\n * prototype of an object, otherwise it will be `null`.\n *\n * It returns the first argument if successful. Throws a `TypeError` if the\n * object is not extensible.\n *\n * @type {null|function(!Object, ?Object): !Object}\n */\n$jscomp.setPrototypeOf = (typeof Object.setPrototypeOf == 'function') ?\n    Object.setPrototypeOf :\n    $jscomp.underscoreProtoCanBeSet() ?\n    function(target, proto) {\n      target.__proto__ = proto;\n      if (target.__proto__ !== proto) {\n        throw new TypeError(target + ' is not extensible');\n      }\n      return target;\n    } :\n    null;\n",
    "/*\n * Copyright 2016 The Closure Compiler Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Polyfill for ES6 extends keyword.\n * @suppress {uselessCode}\n */\n'require base';\n'require util/objectcreate';\n'require es6/util/setprototypeof';\n\n\n/**\n * Inherit the prototype methods and static methods from one constructor\n * into another.\n *\n * This wires up the prototype chain (like goog.inherits) and copies static\n * properties, for ES6-to-ES{3,5} transpilation.\n *\n * Usage:\n * <pre>\n *   function ParentClass() {}\n *\n *   // Regular method.\n *   ParentClass.prototype.foo = function(a) {};\n *\n *   // Static method.\n *   ParentClass.bar = function() {};\n *\n *   function ChildClass() {\n *     ParentClass.call(this);\n *   }\n *   $jscomp.inherits(ChildClass, ParentClass);\n *\n *   var child = new ChildClass();\n *   child.foo();\n *   ChildClass.bar();  // Static inheritance.\n * </pre>\n *\n * @param {!Function} childCtor Child class.\n * @param {!Function} parentCtor Parent class.\n * @suppress {strictMissingProperties} 'superClass_' is not defined on Function\n */\n$jscomp.inherits = function(childCtor, parentCtor) {\n  childCtor.prototype = $jscomp.objectCreate(parentCtor.prototype);\n  /** @override */ childCtor.prototype.constructor = childCtor;\n  if ($jscomp.setPrototypeOf) {\n    // avoid null dereference warning\n    /** @const {!Function} */\n    var setPrototypeOf = $jscomp.setPrototypeOf;\n    setPrototypeOf(childCtor, parentCtor);\n  } else {\n    // setPrototypeOf is not available so we need to copy the static\n    // methods to the child\n    for (var p in parentCtor) {\n      if (p == 'prototype') {\n        // Don't copy parentCtor.prototype to childCtor.\n        continue;\n      }\n      if (Object.defineProperties) {\n        var descriptor = Object.getOwnPropertyDescriptor(parentCtor, p);\n        if (descriptor) {\n          Object.defineProperty(childCtor, p, descriptor);\n        }\n      } else {\n        // Pre-ES5 browser. Just copy with an assignment.\n        childCtor[p] = parentCtor[p];\n      }\n    }\n  }\n\n  childCtor.superClass_ = parentCtor.prototype;\n};\n",
    "/*\n * Copyright 2016 The Closure Compiler Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Runtime code to store the global object.\n */\n'require base';\n\n\n/**\n * @param {!Object} maybeGlobal\n * @return {!Object} The global object.\n * @suppress {undefinedVars|reportUnknownTypes}\n */\n$jscomp.getGlobal = function(maybeGlobal) {\n  // This logic can be simplified to be made more optimizable.\n  return (typeof window != 'undefined' && window === maybeGlobal) ?\n      maybeGlobal :\n      (typeof global != 'undefined' && global != null) ?\n      /** @type {!Object} */ (global) :\n      maybeGlobal;\n};\n\n\n// TODO(sdh): This should be typed as \"the global object\" now that the type\n// of \"Global\" has landed in the type system.\n/**\n * The global object. For browsers we could just use `this` but in Node that\n * doesn't work.\n * @const {?}\n */\n$jscomp.global = $jscomp.getGlobal(this);\n",
    "/*\n * Copyright 2016 The Closure Compiler Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Provides methods to polyfill native objects.\n * @suppress {reportUnknownTypes}\n */\n'require util/defines';\n\n\n/**\n * Polyfill for Object.defineProperty() method:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperty\n *\n * Refuses to define properties on Array.prototype and Object.prototype,\n * since we can't make them non-enumerable and this messes up peoples' for\n * loops.  Beyond this, we simply assign values and not worry\n * about enumerability or writeability.\n * @param {?} target\n * @param {string} property\n * @param {?} descriptor\n * @suppress {reportUnknownTypes}\n */\n$jscomp.defineProperty =\n    $jscomp.ASSUME_ES5 || typeof Object.defineProperties == 'function' ?\n    Object.defineProperty :\n    function(target, property, descriptor) {\n      descriptor = /** @type {!ObjectPropertyDescriptor} */ (descriptor);\n      // NOTE: This is currently never called with a descriptor outside\n      // the control of the compiler.  If we ever decide to polyfill either\n      // Object.defineProperty or Reflect.defineProperty for ES3, we should\n      // explicitly check for `get` or `set` on the descriptor and throw a\n      // TypeError, since it's impossible to properly polyfill it.\n      if (target == Array.prototype || target == Object.prototype) return;\n      target[property] = descriptor.value;\n    };\n",
    "/*\n * Copyright 2016 The Closure Compiler Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Provides methods to polyfill native objects.\n */\n'require util/defineproperty';\n'require util/global';\n\n\n/**\n * @param {string} target Qualified name of the class or method to polyfill,\n *     e.g. 'Array.prototype.includes' or 'Map'.\n * @param {?function(*): *} polyfill A function that takes the current browser\n *     implementation of the target and returns an optional new polyfill\n *     implementation.  If null is returned, then no polyfill will be added.  A\n *     null argument for this parameter indicates that the function will not be\n *     polyfilled, and is only useful for `build_polyfill_table.js` bookkeeping.\n * @param {string} fromLang The language level in which the target is expected\n *     to already be present in the browser.  The compiler requires that\n *     `languageOut < fromLang` before injecting a polyfill (i.e. if the\n *     specified output language already includes the feature then there's no\n *     need to polyfill it).\n * @param {string} toLang The language level required by the polyfill\n *     implementation.  The compiler will issue an error if a polyfill is\n *     required, but `languageOut < toLang`.  Additionally, the\n *     `build_polyfill_table.js` script audits the polyfill dependency tree to\n *     ensure that no polyfill with a lower `toLang` depends on one with a\n *     higher `toLang`.\n * @suppress {reportUnknownTypes}\n * @noinline\n * NOTE: We prevent inlining so RemoveUnusedPolyfills can always recognize this\n * call.\n */\n$jscomp.polyfill = function(target, polyfill, fromLang, toLang) {\n  if (!polyfill) return;\n  var obj = $jscomp.global;\n  var split = target.split('.');\n  for (var i = 0; i < split.length - 1; i++) {\n    var key = split[i];\n    if (!(key in obj)) obj[key] = {};  // Might want to be defineProperty.\n    obj = obj[key];\n  }\n  var property = split[split.length - 1];\n  var orig = obj[property];\n  var impl = polyfill(orig);\n  if (impl == orig || impl == null) return;\n  $jscomp.defineProperty(\n      obj, property, {configurable: true, writable: true, value: impl});\n};\n",
    "/*\n * Copyright 2016 The Closure Compiler Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n'require base';\n'require es6/util/makeiterator';\n'require util/global';\n'require util/polyfill';\n\n/**\n * Should we unconditionally override a native Promise implementation with our\n * own?\n * @define {boolean}\n */\n$jscomp.FORCE_POLYFILL_PROMISE = false;\n\n\n$jscomp.polyfill('Promise',\n    /**\n     * @param {*} NativePromise\n     * @return {*}\n     * @suppress {reportUnknownTypes}\n     */\n    function(NativePromise) {\n  // TODO(bradfordcsmith): Do we need to add checks for standards conformance?\n  //     e.g. The version of FireFox we currently use for testing has a Promise\n  //     that fails to reject attempts to fulfill it with itself, but that\n  //     isn't reasonably testable here.\n  if (NativePromise && !$jscomp.FORCE_POLYFILL_PROMISE) {\n    return NativePromise;\n  }\n\n  /**\n    * Schedules code to be executed asynchronously.\n    * @constructor\n    * @struct\n    */\n  function AsyncExecutor() {\n    /**\n     * Batch of functions to execute.\n     *\n     * Will be `null` initially and immediately after a batch finishes\n     * executing.\n     * @private {?Array<function()>}\n     */\n    this.batch_ = null;\n  }\n\n  /**\n   * Schedule a function to execute asynchronously.\n   *\n   * -   The function will execute:\n   *     -   After the current call stack has completed executing.\n   *     -   After any functions previously scheduled using this object.\n   * -   The return value will be ignored.\n   * -   An exception thrown by the method will be caught and asynchronously\n   *     rethrown when it cannot interrupt any other code. This class provides\n   *     no way to catch such exceptions.\n   * @param {function():?} f\n   */\n  AsyncExecutor.prototype.asyncExecute = function(f) {\n    if (this.batch_ == null) {\n      // no batch created yet, or last batch was fully executed\n      this.batch_ = [];\n      var self = this;\n      this.asyncExecuteFunction(function() { self.executeBatch_(); });\n    }\n    this.batch_.push(f);\n  };\n\n  // NOTE: We want to make sure AsyncExecutor will work as expected even if\n  // testing code should override setTimeout()\n  /** @const {function(!Function, number)} */\n  var nativeSetTimeout = $jscomp.global['setTimeout'];\n\n  /**\n   * Schedule a function to execute asynchronously as soon as possible.\n   *\n   * NOTE: May be overridden for testing.\n   * @package\n   * @param {function()} f\n   */\n  AsyncExecutor.prototype.asyncExecuteFunction = function(f) {\n    nativeSetTimeout(f, 0);\n  };\n\n  /**\n   * Execute scheduled jobs in a batch until all are executed or the batch\n   * execution time limit has been reached.\n   * @private\n   */\n  AsyncExecutor.prototype.executeBatch_ = function() {\n    while (this.batch_ && this.batch_.length) {\n      var /** !Array<?function()> */ executingBatch = this.batch_;\n      // Executions scheduled while executing this batch go into a new one to\n      // avoid the batch array getting too big.\n      this.batch_ = [];\n      for (var i = 0; i < executingBatch.length; ++i) {\n        var f = /** @type {function()} */ (executingBatch[i]);\n        executingBatch[i] = null;  // free memory\n        try {\n          f();\n        } catch (error) {\n          this.asyncThrow_(error);\n        }\n      }\n    }\n    // All jobs finished executing, so force scheduling a new batch next\n    // time asyncExecute() is called.\n    this.batch_ = null;\n  };\n\n  /**\n   * @private\n   * @param {*} exception\n   */\n  AsyncExecutor.prototype.asyncThrow_ = function(exception) {\n    this.asyncExecuteFunction(function() { throw exception; });\n  };\n\n  /**\n   * @enum {number}\n   */\n  var PromiseState = {\n    /** The Promise is waiting for resolution. */\n    PENDING: 0,\n\n    /** The Promise has been resolved with a fulfillment value. */\n    FULFILLED: 1,\n\n    /** The Promise has been resolved with a rejection reason. */\n    REJECTED: 2\n  };\n\n\n  /**\n   * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\n   * @param {function(\n   *             function((TYPE|IThenable<TYPE>|Thenable|null)=),\n   *             function(*=))} executor\n   * @constructor\n   * @extends {Promise<TYPE>}\n   * @template TYPE\n   */\n  var PolyfillPromise = function(executor) {\n    /** @private {PromiseState} */\n    this.state_ = PromiseState.PENDING;\n\n    /**\n     * The settled result of the Promise. Immutable once set with either a\n     * fulfillment value or rejection reason.\n     * @private {*}\n     */\n    this.result_ = undefined;\n\n    /**\n     * These functions must be asynchronously executed when this promise\n     * settles.\n     * @private {?Array<function()>}\n     */\n    this.onSettledCallbacks_ = [];\n\n    var resolveAndReject = this.createResolveAndReject_();\n    try {\n      executor(resolveAndReject.resolve, resolveAndReject.reject);\n    } catch (e) {\n      resolveAndReject.reject(e);\n    }\n  };\n\n\n  /**\n   * Create a pair of functions for resolving or rejecting this Promise.\n   *\n   * <p>After the resolve or reject function has been called once, later calls\n   * do nothing.\n   * @private\n   * @return {{\n   *     resolve: function((TYPE|IThenable<TYPE>|Thenable|null)=),\n   *     reject:  function(*=)\n   * }}\n   */\n  PolyfillPromise.prototype.createResolveAndReject_ = function() {\n    var thisPromise = this;\n    var alreadyCalled = false;\n    /**\n     * @param {function(this:PolyfillPromise<TYPE>, T=)} method\n     * @return {function(T=)}\n     * @template T\n     */\n    function firstCallWins(method) {\n      return function(/** T= */ x) {\n        if (!alreadyCalled) {\n          alreadyCalled = true;\n          method.call(thisPromise, x);\n        }\n      };\n    }\n    return {\n      resolve: firstCallWins(this.resolveTo_),\n      reject: firstCallWins(this.reject_)\n    };\n  };\n\n\n  /**\n   * @private\n   * @param {*=} value\n   */\n  PolyfillPromise.prototype.resolveTo_ = function(value) {\n    if (value === this) {\n      this.reject_(new TypeError('A Promise cannot resolve to itself'));\n    } else if (value instanceof PolyfillPromise) {\n      this.settleSameAsPromise_(/** @type {!PolyfillPromise} */ (value));\n    } else if (isObject(value)) {\n      this.resolveToNonPromiseObj_(/** @type {!Object} */ (value));\n    } else {\n      this.fulfill_(value);\n    }\n  };\n\n\n  /**\n   * @private\n   * @param {!Object} obj\n   * @suppress {strictMissingProperties} obj.then\n   */\n  PolyfillPromise.prototype.resolveToNonPromiseObj_ = function(obj) {\n    var thenMethod = undefined;\n\n    try {\n      thenMethod = obj.then;\n    } catch (error) {\n      this.reject_(error);\n      return;\n    }\n    if (typeof thenMethod == 'function') {\n      this.settleSameAsThenable_(thenMethod, /** @type {!Thenable} */ (obj));\n    } else {\n      this.fulfill_(obj);\n    }\n  };\n\n\n  /**\n   * @param {*} value anything\n   * @return {boolean}\n   */\n  function isObject(value) {\n    switch (typeof value) {\n      case 'object':\n        return value != null;\n      case 'function':\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  /**\n   * Reject this promise for the given reason.\n   * @private\n   * @param {*=} reason\n   * @throws {!Error} if this promise is already fulfilled or rejected.\n   */\n  PolyfillPromise.prototype.reject_ = function(reason) {\n    this.settle_(PromiseState.REJECTED, reason);\n  };\n\n  /**\n   * Fulfill this promise with the given value.\n   * @private\n   * @param {!TYPE} value\n   * @throws {!Error} when this promise is already fulfilled or rejected.\n   */\n  PolyfillPromise.prototype.fulfill_ = function(value) {\n    this.settle_(PromiseState.FULFILLED, value);\n  };\n\n  /**\n   * Fulfill or reject this promise with the given value/reason.\n   * @private\n   * @param {!PromiseState} settledState (FULFILLED or REJECTED)\n   * @param {*} valueOrReason\n   * @throws {!Error} when this promise is already fulfilled or rejected.\n   */\n  PolyfillPromise.prototype.settle_ = function(settledState, valueOrReason) {\n    if (this.state_ != PromiseState.PENDING) {\n      throw new Error(\n          'Cannot settle(' + settledState + ', ' + valueOrReason +\n          '): Promise already settled in state' + this.state_);\n    }\n    this.state_ = settledState;\n    this.result_ = valueOrReason;\n    this.executeOnSettledCallbacks_();\n  };\n\n  PolyfillPromise.prototype.executeOnSettledCallbacks_ = function() {\n    if (this.onSettledCallbacks_ != null) {\n      for (var i = 0; i < this.onSettledCallbacks_.length; ++i) {\n        asyncExecutor.asyncExecute(this.onSettledCallbacks_[i]);\n      }\n      this.onSettledCallbacks_ = null;  // free memory\n    }\n  };\n\n  /**\n   * All promise async execution is managed by a single executor for the\n   * sake of efficiency.\n   * @const {!AsyncExecutor}\n   */\n  var asyncExecutor = new AsyncExecutor();\n\n  /**\n   * Arrange to settle this promise in the same way as the given thenable.\n   * @private\n   * @param {!PolyfillPromise} promise\n   */\n  PolyfillPromise.prototype.settleSameAsPromise_ = function(promise) {\n    var methods = this.createResolveAndReject_();\n\n    // Calling then() would create an unnecessary extra promise.\n    promise.callWhenSettled_(methods.resolve, methods.reject);\n  };\n\n  /**\n   * Arrange to settle this promise in the same way as the given thenable.\n   * @private\n   * @param {function(\n   *     function((TYPE|IThenable<TYPE>|Thenable|null)=),\n   *     function(*=))\n   * } thenMethod\n   * @param {!Thenable} thenable\n   */\n  PolyfillPromise.prototype.settleSameAsThenable_ = function(\n      thenMethod, thenable) {\n    var methods = this.createResolveAndReject_();\n\n    // Don't trust an unknown thenable implementation not to throw exceptions.\n    try {\n      thenMethod.call(thenable, methods.resolve, methods.reject);\n    } catch (error) {\n      methods.reject(error);\n    }\n  };\n\n  /** @override */\n  PolyfillPromise.prototype.then = function(onFulfilled, onRejected) {\n    var resolveChild;\n    var rejectChild;\n    var childPromise = new PolyfillPromise(function(resolve, reject) {\n      resolveChild = resolve;\n      rejectChild = reject;\n    });\n    function createCallback(paramF, defaultF) {\n      // The spec says to ignore non-function values for onFulfilled and\n      // onRejected\n      if (typeof paramF == 'function') {\n        return function(x) {\n          try {\n            resolveChild(paramF(x));\n          } catch (error) {\n            rejectChild(error);\n          }\n        };\n      } else {\n        return defaultF;\n      }\n    }\n\n    this.callWhenSettled_(\n        createCallback(onFulfilled, resolveChild),\n        createCallback(onRejected, rejectChild));\n    return childPromise;\n  };\n\n  /** @override */\n  PolyfillPromise.prototype.catch = function(onRejected) {\n    return this.then(undefined, onRejected);\n  };\n\n\n  PolyfillPromise.prototype.callWhenSettled_ = function(\n      onFulfilled, onRejected) {\n    var /** !PolyfillPromise */ thisPromise = this;\n    function callback() {\n      switch (thisPromise.state_) {\n        case PromiseState.FULFILLED:\n          onFulfilled(thisPromise.result_);\n          break;\n        case PromiseState.REJECTED:\n          onRejected(thisPromise.result_);\n          break;\n        default:\n          throw new Error('Unexpected state: ' + thisPromise.state_);\n      }\n    }\n    if (this.onSettledCallbacks_ == null) {\n      // we've already settled\n      asyncExecutor.asyncExecute(callback);\n    } else {\n      this.onSettledCallbacks_.push(callback);\n    }\n  };\n\n  // called locally, so give it a name\n  function resolvingPromise(opt_value) {\n    if (opt_value instanceof PolyfillPromise) {\n      return opt_value;\n    } else {\n      return new PolyfillPromise(function(resolve, reject) {\n        resolve(opt_value);\n      });\n    }\n  }\n  PolyfillPromise['resolve'] = resolvingPromise;\n\n\n  PolyfillPromise['reject'] = function(opt_reason) {\n    return new PolyfillPromise(function(resolve, reject) {\n      reject(opt_reason);\n    });\n  };\n\n\n  PolyfillPromise['race'] = function(thenablesOrValues) {\n    return new PolyfillPromise(function(resolve, reject) {\n      var /** !Iterator<*> */ iterator =\n          $jscomp.makeIterator(thenablesOrValues);\n      for (var /** !IIterableResult<*> */ iterRec = iterator.next();\n           !iterRec.done;\n           iterRec = iterator.next()) {\n        // Using resolvingPromise() allows us to treat all elements the same\n        // way.\n        // NOTE: resolvingPromise(promise) always returns the argument\n        // unchanged.\n        // Using .callWhenSettled_() instead of .then() avoids creating an\n        // unnecessary extra promise.\n        resolvingPromise(iterRec.value).callWhenSettled_(resolve, reject);\n      }\n    });\n  };\n\n\n  PolyfillPromise['all'] = function(thenablesOrValues) {\n    var /** !Iterator<*> */ iterator = $jscomp.makeIterator(thenablesOrValues);\n    var /** !IIterableResult<*> */ iterRec = iterator.next();\n\n    if (iterRec.done) {\n      return resolvingPromise([]);\n    } else {\n      return new PolyfillPromise(function(resolveAll, rejectAll) {\n        var resultsArray = [];\n        var unresolvedCount = 0;\n\n        function onFulfilled(i) {\n          return function(ithResult) {\n            resultsArray[i] = ithResult;\n            unresolvedCount--;\n            if (unresolvedCount == 0) {\n              resolveAll(resultsArray);\n            }\n          };\n        }\n\n        do {\n          resultsArray.push(undefined);\n          unresolvedCount++;\n          // Using resolvingPromise() allows us to treat all elements the same\n          // way.\n          // NOTE: resolvingPromise(promise) always returns the argument\n          // unchanged. Using .callWhenSettled_() instead of .then() avoids\n          // creating an unnecessary extra promise.\n          resolvingPromise(iterRec.value)\n              .callWhenSettled_(\n                  onFulfilled(resultsArray.length - 1), rejectAll);\n          iterRec = iterator.next();\n        } while (!iterRec.done);\n      });\n    }\n  };\n\n  return PolyfillPromise;\n}, 'es6', 'es3');\n",
    "/*\n * Copyright 2016 The Closure Compiler Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Symbol polyfill.\n * @suppress {uselessCode}\n */\n\n'require es6/util/arrayiterator';\n'require util/defineproperty';\n'require util/global';\n\n/** @const {string} */\n$jscomp.SYMBOL_PREFIX = 'jscomp_symbol_';\n\n/**\n * Initializes the Symbol function.\n * @suppress {reportUnknownTypes}\n */\n$jscomp.initSymbol = function() {\n  // Only need to do this once. All future calls are no-ops.\n  $jscomp.initSymbol = function() {};\n\n  if (!$jscomp.global['Symbol']) {\n    $jscomp.global['Symbol'] = $jscomp.Symbol;\n  }\n};\n\n\n/**\n * @struct @constructor\n * @param {string} id\n * @param {string=} opt_description\n */\n$jscomp.SymbolClass = function(id, opt_description) {\n  /** @private @const {string} */\n  this.$jscomp$symbol$id_ = id;\n\n  /** @const {string|undefined} */\n  this.description;\n\n  // description is read-only.\n  $jscomp.defineProperty(\n      this, 'description',\n      {configurable: true, writable: true, value: opt_description});\n};\n\n\n/** @override */\n$jscomp.SymbolClass.prototype.toString = function() {\n  return this.$jscomp$symbol$id_;\n};\n\n\n/**\n * Produces \"symbols\" (actually just unique strings).\n * @param {string=} opt_description\n * @return {symbol}\n */\n$jscomp.Symbol = /** @type {function(): !Function} */ (function() {\n  var counter = 0;\n\n  /**\n   * @param {string=} opt_description\n   * @return {symbol}\n   * @suppress {reportUnknownTypes}\n   */\n  function Symbol(opt_description) {\n    if (/** @type {?} */ (this) instanceof Symbol) {\n      throw new TypeError('Symbol is not a constructor');\n    }\n    return /** @type {?} */ (new $jscomp.SymbolClass(\n        $jscomp.SYMBOL_PREFIX + (opt_description || '') + '_' + (counter++),\n        opt_description));\n  }\n\n  return Symbol;\n})();\n\n/**\n * Initializes Symbol.iterator (if it's not already defined) and adds a\n * Symbol.iterator property to the Array prototype.\n * @suppress {reportUnknownTypes}\n */\n$jscomp.initSymbolIterator = function() {\n  $jscomp.initSymbol();\n  var symbolIterator = $jscomp.global['Symbol'].iterator;\n  if (!symbolIterator) {\n    symbolIterator = $jscomp.global['Symbol'].iterator =\n        $jscomp.global['Symbol']('Symbol.iterator');\n  }\n\n  if (typeof Array.prototype[symbolIterator] != 'function') {\n    $jscomp.defineProperty(\n        Array.prototype, symbolIterator, {\n          configurable: true,\n          writable: true,\n          /**\n           * @this {Array}\n           * @return {!IteratorIterable}\n           */\n          value: function() {\n            return $jscomp.iteratorPrototype(\n                $jscomp.arrayIteratorImpl(this));\n          }\n        });\n  }\n\n  // Only need to do this once. All future calls are no-ops.\n  $jscomp.initSymbolIterator = function() {};\n};\n\n\n/**\n * Initializes Symbol.asyncIterator (if it's not already defined)\n * @suppress {reportUnknownTypes}\n */\n$jscomp.initSymbolAsyncIterator = function() {\n  $jscomp.initSymbol();\n  var symbolAsyncIterator = $jscomp.global['Symbol'].asyncIterator;\n  if (!symbolAsyncIterator) {\n    symbolAsyncIterator = $jscomp.global['Symbol'].asyncIterator =\n        $jscomp.global['Symbol']('Symbol.asyncIterator');\n  }\n\n  // Only need to do this once. All future calls are no-ops.\n  $jscomp.initSymbolAsyncIterator = function() {};\n};\n\n/**\n * Returns an iterator with the given `next` method.  Passing\n * all iterators through this function allows easily extending\n * the definition of `%IteratorPrototype%` if methods are ever\n * added to it in the future.\n *\n * @param {function(this: Iterator<T>): T} next\n * @return {!IteratorIterable<T>}\n * @template T\n * @suppress {reportUnknownTypes}\n */\n$jscomp.iteratorPrototype = function(next) {\n  $jscomp.initSymbolIterator();\n\n  var iterator = {next: next};\n  /**\n   * @this {IteratorIterable}\n   * @return {!IteratorIterable}\n   */\n  iterator[$jscomp.global['Symbol'].iterator] = function() {\n    return this;\n  };\n  return /** @type {!IteratorIterable} */ (iterator);\n};\n",
    "/*\n * Copyright 2018 The Closure Compiler Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n'require base';\n'require es6/symbol';\n'require es6/util/setprototypeof';\n'require es6/util/makeiterator';\n\n/**\n * @fileoverview Implementation for $jscomp.generator\n *\n * This closure-compiler internal JavaScript library provides an ES3-compatible\n * API for writing generator functions using a minimum of boilerplate.\n *\n * Example:\n * ```javascript\n * // yields numbers starting with the given value, then incrementing by the\n * // value supplied to the next() method until the computed value is <= min or\n * // >= max. Then it returns the total number of times it yielded.\n * // If the client code calls throw(), the error will be logged and then\n * // yielded, but the generator won't terminate.\n * function *es6Definition(start, min, max) {\n *   let currentValue = start;\n *   let yieldCount = 0;\n *   while (currentValue > min && currentValue < max) {\n *     try {\n *       currentValue += yield(currentValue);\n *     } catch (e) {\n *       yield(e);\n *       console.log('client threw error', e);\n *     } finally {\n *       yieldCount++;\n *     }\n *   }\n *   return [yieldCount, currentValue];\n * }\n *\n * function es3Definition(start, min, max) {\n *   var currentValue;\n *   var yieldCount;\n *   var e;\n *\n *   return $jscomp.generator.createGenerator(\n *       es3Definition,\n *       function (context$) {\n *         switch (context$.nextAddress) {\n *           case 1: // execution always starts with 1\n *             currentValue = start;\n *             yieldCount = 0;\n *             // fall-through\n *\n *           case 2:\n *             if (!(currentValue > min && currentValue < max)) {\n *               // exit while loop:\n *               return context$.jumpTo(3);\n *             }\n *             // try {\n *             JSCompiler_temp_const$jscomp$1 = currentValue;\n *             context$.setCatchFinallyBlocks(4, 5);\n *             return context$.yield(currentValue, 7);\n *\n *           case 7:\n *             currentValue =\n *                 JSCompiler_temp_const$jscomp$1 + context$.yieldResult;\n *             // fall-through: execute finally block\n *\n *           case 5: // finally block start\n *             context$.enterFinallyBlock();\n *             yieldCount++;\n *             return context$.leaveFinallyBlock(6);\n *\n *           case 4: // catch block start\n *             e = context$.enterCatchBlock();\n *             return context$.yield(e, 8);\n *\n *           case 8: // finish catch block\n *             console.log('client threw error', e);\n *             return context$.jumpTo(5);\n *\n *           case 6:\n *             context$.jumpTo(2);\n *             break;\n *\n *           case 3:\n *             // come back here when while loop block exits\n *             return context$.return([yieldCount, currentValue]);\n *         }\n *       }\n *   });\n * };\n * ```\n */\n\n/** @const */\n$jscomp.generator = {};\n\n/**\n * Ensures that the iterator result is actually an object.\n *\n * @private\n * @final\n * @param {*} result\n * @return {void}\n * @throws {TypeError} if the result is not an instenace of Object.\n */\n$jscomp.generator.ensureIteratorResultIsObject_ = function(result) {\n  if (result instanceof Object) {\n    return;\n  }\n  throw new TypeError('Iterator result ' + result + ' is not an object');\n};\n\n\n/**\n * Tracks state machine state used by generator.Engine.\n *\n * @template VALUE\n * @constructor\n * @final\n * @struct\n */\n$jscomp.generator.Context = function() {\n  /**\n   * Whether the generator program is being executed at the moment in the\n   * current context. Is used to prevent reentrancy.\n   *\n   * @private\n   * @type {boolean}\n   */\n  this.isRunning_ = false;\n\n  /**\n   * An iterator that should yield all its values before the main program can\n   * continue.\n   *\n   * @private\n   * @type {?Iterator<VALUE>}\n   */\n  this.yieldAllIterator_ = null;\n\n  /**\n   * The value that will be sent to the program as the result of suspended\n   * yield expression.\n   *\n   * @type {?}\n   */\n  this.yieldResult = undefined;\n\n  /**\n   * The next address where the state machine execution should be resumed.\n   *\n   * <p>Program execution starts at 1 and ends at 0.\n   *\n   * @type {number}\n   */\n  this.nextAddress = 1;\n\n  /**\n   * The address that should be executed once an exception is thrown.\n   *\n   * <p>Value of 0 means no catch block exist that would handles an exception.\n   *\n   * @private\n   * @type {number}\n   */\n  this.catchAddress_ = 0;\n\n  /**\n   * The address that should be executed once the result is being returned\n   * or if the exception is thrown and there is no catchAddress specified.\n   *\n   * <p>Value of 0 means no finally block is set.\n   *\n   * @private\n   * @type {number}\n   */\n  this.finallyAddress_ = 0;\n\n  /**\n   * Stores information for the runtime propagation of values and control\n   * flow such as the behaviour of statements (break, continue, return and\n   * throw) that perform nonlocal transfers of control.\n   *\n   * @private\n   * @type {null|{return: VALUE}|{exception, isException: boolean}|{jumpTo: number}}.\n   */\n  this.abruptCompletion_ = null;\n\n  /**\n   * The preserved abruptCompletion_ when entering a `finally` block. If\n   * the `finally` block completes normally the preserved abruptCompletion_ is\n   * restored:\n   * <pre>\n   * try {\n   * } finally {  // nesting level 0\n   *   // abruptCompletion_ is saved in finallyContexts_[0]\n   *   try {\n   *   } finally {  // nesting level 1\n   *     // abruptCompletion_ is saved in finallyContexts_[1]\n   *     ...\n   *     // abruptCompletion_ is restored from finallyContexts_[1]\n   *   }\n   *   // abruptCompletion_ is restored from finallyContexts_[0]\n   * }\n   * <pre>\n   *\n   * @private\n   * @type {?Array<null|{return: VALUE}|{exception, isException: boolean}|{jumpTo: number}>}.\n   */\n  this.finallyContexts_ = null;\n};\n\n/**\n * Marks generator program as being run.\n *\n * @private\n * @final\n * @return {void}\n * @throws {TypeError} if generator is already running.\n */\n$jscomp.generator.Context.prototype.start_ = function() {\n  if (this.isRunning_) {\n    throw new TypeError('Generator is already running');\n  }\n  this.isRunning_ = true;\n};\n\n/**\n *\n *\n * @private\n * @final\n * @return {void}\n */\n$jscomp.generator.Context.prototype.stop_ = function() {\n  this.isRunning_ = false;\n};\n\n/**\n * Transfers program execution to an appropriate catch/finally block that\n * should be executed if exception occurs.\n *\n * @private\n * @final\n * @return {void}\n */\n$jscomp.generator.Context.prototype.jumpToErrorHandler_ = function() {\n  this.nextAddress = this.catchAddress_ || this.finallyAddress_;\n};\n\n/**\n * Sets the result of suspended yield expression.\n *\n * @private\n * @final\n * @param {?=} value The value to send to the generator.\n * @return {void}\n * @suppress {reportUnknownTypes}\n */\n$jscomp.generator.Context.prototype.next_ = function(value) {\n  this.yieldResult = value;\n};\n\n/**\n * Throws exception as the result of suspended yield.\n *\n * @private\n * @final\n * @param {?} e\n * @return {void}\n * @suppress {reportUnknownTypes}\n */\n$jscomp.generator.Context.prototype.throw_ = function(e) {\n  this.abruptCompletion_ = {exception: e, isException: true};\n  this.jumpToErrorHandler_();\n};\n\n/**\n * Returns a value as the result of generator function.\n *\n * @final\n * @param {VALUE=} value\n * @return {void}\n * @suppress {reportUnknownTypes}\n */\n$jscomp.generator.Context.prototype.return = function(value) {\n  this.abruptCompletion_ = {return: /** @type {VALUE} */ (value)};\n  this.nextAddress = this.finallyAddress_;\n};\n\n/**\n * Changes the context so the program execution will continue from the given\n * state after executing nessesary pending finally blocks first.\n *\n * @final\n * @param {number} nextAddress The state that should be run.\n * @return {void}\n */\n$jscomp.generator.Context.prototype.jumpThroughFinallyBlocks = function(\n    nextAddress) {\n  this.abruptCompletion_ = {jumpTo: nextAddress};\n  this.nextAddress = this.finallyAddress_;\n};\n\n/**\n * Pauses the state machine program assosiated with generator function to yield\n * a value.\n *\n * @final\n * @param {VALUE} value The value to return from the generator function via\n *     the iterator protocol.\n * @param {number} resumeAddress The address where the program should resume.\n * @return {{value: VALUE}}\n * @suppress {reportUnknownTypes}\n */\n$jscomp.generator.Context.prototype.yield = function(value, resumeAddress) {\n  this.nextAddress = resumeAddress;\n  return {value: value};\n};\n\n/**\n * Causes the state machine program to yield all values from an iterator.\n *\n * @final\n * @param {string|!Iterator<VALUE>|!Iterable<VALUE>|!Arguments} iterable\n *     Iterator to yeild all values from.\n * @param {number} resumeAddress The address where the program should resume.\n * @return {void | {value: VALUE}}\n * @suppress {reportUnknownTypes}\n */\n$jscomp.generator.Context.prototype.yieldAll = function(\n    iterable, resumeAddress) {\n  /** @const @type {!Iterator<VALUE>} */ var iterator =\n      $jscomp.makeIterator(iterable);\n  /** @const */ var result = iterator.next();\n  $jscomp.generator.ensureIteratorResultIsObject_(result);\n  if (result.done) {\n    // If `someGenerator` in `x = yield *someGenerator` completes immediately,\n    // x is the return value of that generator.\n    this.yieldResult = result.value;\n    this.nextAddress = resumeAddress;\n    return;\n  }\n  this.yieldAllIterator_ = iterator;\n  return this.yield(result.value, resumeAddress);\n};\n\n/**\n * Changes the context so the program execution will continue from the given\n * state.\n *\n * @final\n * @param {number} nextAddress The state the program should continue\n * @return {void}\n */\n$jscomp.generator.Context.prototype.jumpTo = function(nextAddress) {\n  this.nextAddress = nextAddress;\n};\n\n/**\n * Changes the context so the program execution ends.\n *\n * @final\n * @return {void}\n */\n$jscomp.generator.Context.prototype.jumpToEnd = function() {\n  this.nextAddress = 0;\n};\n\n/**\n * Sets catch / finally handlers.\n * Used for try statements with catch blocks.\n *\n * @final\n * @param {number} catchAddress The address of the catch block.\n * @param {number=} finallyAddress The address of the finally block.\n * @return {void}\n */\n$jscomp.generator.Context.prototype.setCatchFinallyBlocks = function(\n    catchAddress, finallyAddress) {\n  this.catchAddress_ = catchAddress;\n  if (finallyAddress != undefined) {\n    this.finallyAddress_ = finallyAddress;\n  }\n};\n\n/**\n * Sets finally handler.\n * Used for try statements without catch blocks.\n *\n * @const\n * @param {number=} finallyAddress The address of the finally block or 0.\n * @return {void}\n */\n$jscomp.generator.Context.prototype.setFinallyBlock = function(finallyAddress) {\n  this.catchAddress_ = 0;\n  this.finallyAddress_ = finallyAddress || 0;\n};\n\n/**\n * Sets a catch handler and jumps to the next address.\n * Used for try statements without finally blocks.\n *\n * @final\n * @param {number} nextAddress The state that should be run next.\n * @param {number=} catchAddress The address of the catch block or 0.\n * @return {void}\n */\n$jscomp.generator.Context.prototype.leaveTryBlock = function(\n    nextAddress, catchAddress) {\n  this.nextAddress = nextAddress;\n  this.catchAddress_ = catchAddress || 0;\n};\n\n/**\n * Initializes exception variable in the beginning of catch block.\n *\n * @final\n * @param {number=} nextCatchBlockAddress The address of the next catch block\n *     that is preceded by no finally blocks.\n * @return {?} Returns an exception that was thrown from \"try\" block.\n * @suppress {reportUnknownTypes}\n */\n$jscomp.generator.Context.prototype.enterCatchBlock = function(\n    nextCatchBlockAddress) {\n  this.catchAddress_ = nextCatchBlockAddress || 0;\n  /** @const */ var exception =\n      /** @type {{exception, isException: boolean}} */ (this.abruptCompletion_)\n          .exception;\n  this.abruptCompletion_ = null;\n  return exception;\n};\n\n/**\n * Saves the current throw context which will be restored at the end of finally\n * block.\n *\n * @final\n * @param {number=} nextCatchAddress\n * @param {number=} nextFinallyAddress\n * @param {number=} finallyDepth The nesting level of current \"finally\" block.\n * @return {void}\n */\n$jscomp.generator.Context.prototype.enterFinallyBlock = function(\n    nextCatchAddress, nextFinallyAddress, finallyDepth) {\n  if (!finallyDepth) {\n    this.finallyContexts_ = [this.abruptCompletion_];\n  } else {\n    /**\n     * @type {!Array<null|{return: VALUE}|{exception, isException: boolean}|{jumpTo: number}>}\n     */\n    (this.finallyContexts_)[finallyDepth] = this.abruptCompletion_;\n  }\n  this.catchAddress_ = nextCatchAddress || 0;\n  this.finallyAddress_ = nextFinallyAddress || 0;\n};\n\n/**\n * Figures out whether the program execution should continue normally, or jump\n * to the closest catch/finally block.\n *\n * @final\n * @param {number} nextAddress The state that should be run next.\n * @param {number=} finallyDepth The nesting level of current \"finally\" block.\n * @return {void}\n * @suppress {strictMissingProperties}\n */\n$jscomp.generator.Context.prototype.leaveFinallyBlock = function(\n    nextAddress, finallyDepth) {\n  // There could be trailing finally contexts if a nested finally throws an\n  // exception or return.\n  // e.g.\n  // try {\n  //   ...\n  //   return 1;\n  // } finally {\n  //   // finallyDepth == 0\n  //   // finallyContext == [{return: 1}]\n  //   try {\n  //     ...\n  //     try {\n  //       throw new Error(2);\n  //     } finally {\n  //       // finallyDepth == 1\n  //       // finallyContext == [{return: 1}, {exception: Error(2)}]\n  //       try {\n  //         throw new Error(3);\n  //       } finally {\n  //         // finallyDepth == 2\n  //         // finallyContext == [\n  //         //     {return: 1},\n  //         //     {exception: Error(2)},\n  //         //     {exception: Error(3)}\n  //         // ]\n  //         throw new Error(4); // gets written in abruptCompletion_\n  //         // leaveFinallyBlock() never gets called here\n  //       }\n  //       // leaveFinallyBlock() never gets called here\n  //     }\n  //   } catch (e) {\n  //      // swallow error\n  //      // abruptCompletion becomes null\n  //   } finally {\n  //     // finallyDepth == 1\n  //     // finallyContext == [\n  //     //     {return: 1},\n  //     //     null, // overwritten, because catch swallowed the error\n  //     //     {exception: Error(3)}  // left over\n  //     // ]\n  //     // leaveFinallyBlock() called here\n  //     // finallyContext == [{return: 1}]\n  //     // abruptCompletion == null\n  //   }\n  //   // leaveFinallyBlock() called here\n  //   // finallyContext = []\n  //   // abruptCompletion == {return: 1};\n  // }\n  /** @const */ var preservedContext =\n      /**\n       * @type {!Array<null|{return: VALUE}|{exception, isException: boolean}|{jumpTo: number}>}\n       */\n      (this.finallyContexts_).splice(finallyDepth || 0)[0];\n  /** @const */ var abruptCompletion = this.abruptCompletion_ =\n      this.abruptCompletion_ || preservedContext;\n  if (abruptCompletion) {\n    if (abruptCompletion.isException) {\n      return this.jumpToErrorHandler_();\n    }\n    // Check if there is a pending break/continue jump that is not preceded by\n    // finally blocks that should be executed before.\n    // We always generate case numbers for the start and end of loops before\n    // numbers for anything they contain, so any finally blocks within will be\n    // guaranteed to have higher addresses than the loop break and continue\n    // positions.\n    // e.g.\n    // l1: while (...) {            // generated addresses: 100: break l1;\n    //       try {                  // generated addresses: 101: finally,\n    //         try {                // generated addresses: 102: finally,\n    //           l2: while (...) {  // generated addresses: 103: break l2;\n    //\n    //                 if (...) {\n    //                   break l1;  // becomes\n    //                              // $context.jumpThroughFinallyBlocks(101),\n    //                              // since 2 finally blocks must be crossed\n    //                 }\n    //                 break l2;    // becomes $context.jumpTo(103)\n    //               }\n    //         } finally {\n    //           // When leaving this finally block:\n    //           // 1. We keep the abrupt completion indicating 'break l1'\n    //           // 2. We jump to the enclosing finally block.\n    //         }\n    //       } finally {\n    //         // When leaving this finally block:\n    //         // 1. We complete the abruptCompletion indicating 'break l1' by\n    //         //   jumping to the loop start address.\n    //         // 2. Abrupt completion is now null, so normal execution\n    //         //   continues from there.\n    //       }\n    //     }\n    if (abruptCompletion.jumpTo != undefined &&\n        this.finallyAddress_ < abruptCompletion.jumpTo) {\n      this.nextAddress = abruptCompletion.jumpTo;\n      this.abruptCompletion_ = null;\n    } else {\n      this.nextAddress = this.finallyAddress_;\n    }\n  } else {\n    this.nextAddress = nextAddress;\n  }\n};\n\n/**\n * Is used in transpilation of `for in` statements.\n *\n * <p><code>for (var i in obj) {...}</code> becomes:\n * <pre>\n * for (var i, $for$in = context$.forIn(obj);\n *      (i = $for$in.getNext()) != null;\n *      ) {\n *   ...\n * }\n * </pre>\n *\n * @final\n * @param {?} object\n * @return {!$jscomp.generator.Context.PropertyIterator}\n * @suppress {reportUnknownTypes}\n */\n$jscomp.generator.Context.prototype.forIn = function(object) {\n  return new $jscomp.generator.Context.PropertyIterator(object);\n};\n\n/**\n * @constructor\n * @final\n * @struct\n * @param {?} object\n * @suppress {reportUnknownTypes}\n */\n$jscomp.generator.Context.PropertyIterator = function(object) {\n  /**\n   * @private\n   * @const\n   * @type {?}\n   */\n  this.object_ = object;\n\n  /**\n   * @private\n   * @const\n   * @type {!Array<string>}\n   */\n  this.properties_ = [];\n\n  for (var property in /** @type {!Object} */ (object)) {\n    this.properties_.push(property);\n  }\n  this.properties_.reverse();\n};\n\n/**\n * Returns the next object's property that is still valid.\n *\n * @final\n * @return {?string}\n * @suppress {reportUnknownTypes}\n */\n$jscomp.generator.Context.PropertyIterator.prototype.getNext = function() {\n  // The JS spec does not require that properties added after the loop begins\n  // be included in the loop, but it does require that the current property\n  // must still exist on the object when the loop iteration starts.\n  while (this.properties_.length > 0) {\n    /** @const */ var property = this.properties_.pop();\n    if (property in /** @type {!Object} */ (this.object_)) {\n      return property;\n    }\n  }\n  return null;\n};\n\n/**\n * Engine handling execution of a state machine associated with the generator\n * program and its context.\n *\n * @private\n * @template VALUE\n * @constructor\n * @final\n * @struct\n * @param {function(!$jscomp.generator.Context<VALUE>): (void|{value: VALUE})} program\n */\n$jscomp.generator.Engine_ = function(program) {\n  /**\n   * @private\n   * @const\n   * @type {!$jscomp.generator.Context<VALUE>}\n   */\n  this.context_ = new $jscomp.generator.Context();\n\n  /**\n   * @private\n   * @const\n   * @type {function(!$jscomp.generator.Context<VALUE>): (void|{value: VALUE})}\n   */\n  this.program_ = program;\n};\n\n/**\n * Returns an object with two properties done and value.\n * You can also provide a parameter to the next method to send a value to the\n * generator.\n *\n * @private\n * @final\n * @param {?=} value The value to send to the generator.\n * @return {!IIterableResult<VALUE>}\n * @suppress {reportUnknownTypes}\n */\n$jscomp.generator.Engine_.prototype.next_ = function(value) {\n  this.context_.start_();\n  if (this.context_.yieldAllIterator_) {\n    return this.yieldAllStep_(\n        this.context_.yieldAllIterator_.next, value, this.context_.next_);\n  }\n  this.context_.next_(value);\n  return this.nextStep_();\n};\n\n/**\n * Attempts to finish the generator with a given value.\n *\n * @private\n * @final\n * @param {VALUE} value The value to return.\n * @return {!IIterableResult<VALUE>}\n * @suppress {reportUnknownTypes}\n */\n$jscomp.generator.Engine_.prototype.return_ = function(value) {\n  this.context_.start_();\n  /** @const */ var yieldAllIterator = this.context_.yieldAllIterator_;\n  if (yieldAllIterator) {\n    /** @const @type {function(VALUE): !IIterableResult<VALUE>} */ var\n        returnFunction =\n            'return' in yieldAllIterator ? yieldAllIterator['return'] :\n                                           function(v) {\n                                             return {value: v, done: true};\n                                           };\n    return this.yieldAllStep_(returnFunction, value, this.context_.return);\n  }\n  this.context_.return(value);\n  return this.nextStep_();\n};\n\n/**\n * Resumes the execution of a generator by throwing an error into it and\n * returns an object with two properties done and value.\n *\n * @private\n * @final\n * @param {?} exception The exception to throw.\n * @return {!IIterableResult<VALUE>}\n * @suppress {reportUnknownTypes}\n */\n$jscomp.generator.Engine_.prototype.throw_ = function(exception) {\n  this.context_.start_();\n  if (this.context_.yieldAllIterator_) {\n    return this.yieldAllStep_(\n        this.context_.yieldAllIterator_['throw'], exception,\n        this.context_.next_);\n  }\n  this.context_.throw_(exception);\n  return this.nextStep_();\n};\n\n/**\n * Redirects next/throw/return method calls to an iterator passed to \"yield *\".\n *\n * @private\n * @final\n * @template T\n * @param {function(this:Iterator<VALUE>, T): !IIterableResult<VALUE>} action\n * @param {T} value\n * @param {function(this:$jscomp.generator.Context, VALUE): void} nextAction\n * @return {!IIterableResult<VALUE>}\n * @suppress {reportUnknownTypes}\n */\n$jscomp.generator.Engine_.prototype.yieldAllStep_ = function(\n    action, value, nextAction) {\n  try {\n    /** @const */ var result = action.call(\n        /** @type {!Iterator<VALUE>} */ (this.context_.yieldAllIterator_),\n        value);\n    $jscomp.generator.ensureIteratorResultIsObject_(result);\n    if (!result.done) {\n      this.context_.stop_();\n      return result;\n    }\n    // After `x = yield *someGenerator()` x is the return value of the\n    // generator, not a value passed to this generator by the next() method.\n    /** @const */ var resultValue = result.value;\n  } catch (e) {\n    this.context_.yieldAllIterator_ = null;\n    this.context_.throw_(e);\n    return this.nextStep_();\n  }\n  this.context_.yieldAllIterator_ = null;\n  nextAction.call(this.context_, resultValue);\n  return this.nextStep_();\n};\n\n/**\n * Continues/resumes program execution until the next suspension point (yield).\n *\n * @private\n * @final\n * @return {!IIterableResult<VALUE>}\n * @suppress {reportUnknownTypes, strictMissingProperties}\n */\n$jscomp.generator.Engine_.prototype.nextStep_ = function() {\n  while (this.context_.nextAddress) {\n    try {\n      /** @const */ var yieldValue = this.program_(this.context_);\n      if (yieldValue) {\n        this.context_.stop_();\n        return {value: yieldValue.value, done: false};\n      }\n    } catch (e) {\n      this.context_.yieldResult = undefined;\n      this.context_.throw_(e);\n    }\n  }\n\n  this.context_.stop_();\n  if (this.context_.abruptCompletion_) {\n    /** @const */ var abruptCompletion = this.context_.abruptCompletion_;\n    this.context_.abruptCompletion_ = null;\n    if (abruptCompletion.isException) {\n      throw abruptCompletion.exception;\n    }\n    return {value: abruptCompletion.return, done: true};\n  }\n  return {value: /** @type {?} */ (undefined), done: true};\n};\n\n/**\n * The Generator object that is returned by a generator function and it\n * conforms to both the iterable protocol and the iterator protocol.\n *\n * @private\n * @template VALUE\n * @constructor\n * @final\n * @implements {Generator<VALUE>}\n * @param {!$jscomp.generator.Engine_<VALUE>} engine\n * @suppress {reportUnknownTypes}\n */\n$jscomp.generator.Generator_ = function(engine) {\n  /** @const @override */\n  this.next = function(opt_value) {\n    return engine.next_(opt_value);\n  };\n\n  /** @const @override */\n  this.throw = function(exception) {\n    return engine.throw_(exception);\n  };\n\n  /** @const @override */\n  this.return = function(value) {\n    return engine.return_(value);\n  };\n\n  $jscomp.initSymbolIterator();\n\n  /** @this {$jscomp.generator.Generator_<VALUE>} */\n  this[Symbol.iterator] = function() {\n    return this;\n  };\n\n  // TODO(skill): uncomment once Symbol.toStringTag is polyfilled:\n  // this[Symbol.toStringTag] = 'Generator';\n};\n\n/**\n * Creates a generator backed up by Engine running a given program.\n *\n * @final\n * @template VALUE\n * @param {function(this:?, ...): (!Iterator<VALUE>|!Iterable<VALUE>)} generator\n * @param {function(!$jscomp.generator.Context<VALUE>): (void|{value: VALUE})} program\n * @return {!Generator<VALUE>}\n * @suppress {reportUnknownTypes}\n */\n$jscomp.generator.createGenerator = function(generator, program) {\n  /** @const */ var result =\n      new $jscomp.generator.Generator_(new $jscomp.generator.Engine_(program));\n  // The spec says that `myGenFunc() instanceof myGenFunc` must be true.\n  // We'll make this work by setting the prototype before calling the\n  // constructor every time. All of the methods of the object are defined on the\n  // instance by the constructor, so this does no harm.\n  // We also cast Generator_ to Object to hide dynamic inheritance from\n  // jscompiler, it makes ConformanceRules$BanUnknownThis happy.\n  if ($jscomp.setPrototypeOf) {\n    /** @type {function(!Object, ?Object): !Object} */ ($jscomp.setPrototypeOf)(\n        result, generator.prototype);\n  }\n  return result;\n};\n",
    "import { h } from 'preact'\nimport { render, Component } from 'preact'\nimport Form, { FormGroup } from '@depack/form'\nimport { subscribe } from './client'\n\nclass Subscriptions extends Component {\n  async getRegister() {\n    const register = await navigator.serviceWorker.register('/service-worker.js', {\n      scope: '/',\n    })\n    return register\n  }\n  async subscribe() {\n    this.setState({ loading: true })\n    try {\n      const register = await this.getRegister()\n      const { p256dh } = await subscribe(register, this.props.host, 'lambda-sub')\n      this.setState({ p256dh })\n    } finally {\n      this.setState({ loading: false })\n    }\n  }\n  async unsubscribe() {\n    const { p256dh } = this.state\n    if (!p256dh) return\n    this.setState({ loading: true })\n    try {\n      const res = await fetch(`${this.props.host}/unsubscribe?lambda=true&key=${p256dh}`)\n      const { 'comments': comments } = await res.json()\n      if (comments === false) this.setState({ p256dh: undefined })\n    } finally {\n      this.setState({ loading: false })\n    }\n  }\n  render({ disabled }) {\n    const { p256dh, loading } = this.state\n    return h(FormGroup,{'form-row':true, 'col-2':true, label:\"Subscribe\", help:\"Receive push notifications about package updates.\"},\n      h('div',{'className':\"col-10\"},\n        h('div',{'className':\"form-check col-4\"},\n          h('input',{'checked':disabled ? false : p256dh,'onChange':(ev) => {\n            if (!ev.currentTarget.checked) {\n              const res = window.confirm('Are you sure you want so unsubscribe? You will stop receiving notifications from ALL comments on the website.')\n              if (!res) return ev.currentTarget.checked = true\n              this.unsubscribe()\n            } else this.subscribe()\n          },'disabled':disabled,'type':\"checkbox\",'className':\"form-check-input\",'id':\"subscribe\"}),\n          h('label',{'className':\"form-check-label\",'htmlFor':\"subscribe\"},\n            (!disabled && loading) && h('span',{'style':\"color:grey\"},`Checking your subscriptions...`),\n            (!disabled && !loading && p256dh) && h('span',{'style':\"color:green\"},`You've subscribed 👍`) ,\n          ),\n          h('input',{'value':p256dh,'name':\"sub-id\",'type':\"hidden\"}),\n        ),\n      ),\n    )\n  }\n}\n\nconst App = () => {\n  return (  h(Form,{},\n    h(Subscriptions,{host:window['host'] || 'http://localhost:5000'}),\n  ))\n}\n\nrender(h(App), document.getElementById('preact'))",
    "/*\n * Copyright 2016 The Closure Compiler Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n'require base';\n'require es6/promise';\n'require es6/generator_engine';\n\n/**\n * Handles the execution of an async function.\n *\n * An async function, foo(a, b), will be rewritten as:\n *\n * ```\n * function foo(a, b) {\n *   let $jscomp$async$this = this;\n *   let $jscomp$async$arguments = arguments;\n *   let $jscomp$async$super$get$x = () => super.x;\n *   function* $jscomp$async$generator() {\n *     // original body of foo() with:\n *     // - await (x) replaced with yield (x)\n *     // - arguments replaced with $jscomp$async$arguments\n *     // - this replaced with $jscomp$async$this\n *     // - super.x replaced with $jscomp$async$super$get$x()\n *     // - super.x(5) replaced with  $jscomp$async$super$get$x()\n *     //      .call($jscomp$async$this, 5)\n *   }\n *   return $jscomp.executeAsyncGenerator($jscomp$async$generator());\n * }\n * ```\n * @param {!Generator<?>} generator\n * @return {!Promise<?>}\n * @suppress {reportUnknownTypes}\n */\n$jscomp.asyncExecutePromiseGenerator = function(generator) {\n  function passValueToGenerator(value) {\n    return generator.next(value);\n  }\n\n  function passErrorToGenerator(error) {\n    return generator.throw(error);\n  }\n\n  return new Promise(function(resolve, reject) {\n    function handleGeneratorRecord(/** !IIterableResult<*> */ genRec) {\n      if (genRec.done) {\n        resolve(genRec.value);\n      } else {\n        // One can await a non-promise, so genRec.value\n        // might not already be a promise.\n        Promise.resolve(genRec.value)\n            .then(passValueToGenerator, passErrorToGenerator)\n            .then(handleGeneratorRecord, reject);\n      }\n    }\n\n    handleGeneratorRecord(generator.next());\n  });\n};\n\n/**\n * Handles the execution of a generator function returning promises.\n *\n * An async function, foo(a, b), will be rewritten as:\n *\n * ```\n * function foo(a, b) {\n *   let $jscomp$async$this = this;\n *   let $jscomp$async$arguments = arguments;\n *   let $jscomp$async$super$get$x = () => super.x;\n *   return $jscomp.asyncExecutePromiseGeneratorFunction(\n *       function* () {\n *         // original body of foo() with:\n *         // - await (x) replaced with yield (x)\n *         // - arguments replaced with $jscomp$async$arguments\n *         // - this replaced with $jscomp$async$this\n *         // - super.x replaced with $jscomp$async$super$get$x()\n *         // - super.x(5) replaced with  $jscomp$async$super$get$x()\n *         //      .call($jscomp$async$this, 5)\n *       });\n * }\n * ```\n * @param {function(): !Generator<?>} generatorFunction\n * @return {!Promise<?>}\n * @suppress {reportUnknownTypes}\n */\n$jscomp.asyncExecutePromiseGeneratorFunction = function(generatorFunction) {\n  return $jscomp.asyncExecutePromiseGenerator(generatorFunction());\n};\n\n/**\n * Handles the execution of a state machine program that represents transpiled\n * async function.\n *\n * @final\n * @param {function(!$jscomp.generator.Context<?>): (void|{value: ?})} program\n * @return {!Promise<?>}\n * @suppress {reportUnknownTypes, visibility}\n */\n$jscomp.asyncExecutePromiseGeneratorProgram = function(program) {\n  return $jscomp.asyncExecutePromiseGenerator(\n      new $jscomp.generator.Generator_(\n          new $jscomp.generator.Engine_(\n              program)));\n};\n",
    "/*\n * Copyright 2016 The Closure Compiler Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Utilities for iterator-returning methods.\n */\n'require es6/symbol';\n\n\n/**\n * Creates an iterator from an array-like, with a transformation function.\n * @param {!IArrayLike<INPUT>} array\n * @param {function(number, INPUT): OUTPUT} transform\n * @return {!IteratorIterable<OUTPUT>}\n * @template INPUT, OUTPUT\n * @suppress {checkTypes|reportUnknownTypes}\n */\n$jscomp.iteratorFromArray = function(array, transform) {\n  $jscomp.initSymbolIterator();\n  // NOTE: IE8 doesn't support indexing from boxed Strings.\n  if (array instanceof String) array = array + '';\n  var i = 0;\n  var iter = {\n    next: function() {\n      if (i < array.length) {\n        var index = i++;\n        return {value: transform(index, array[index]), done: false};\n      }\n      iter.next = function() { return {done: true, value: void 0}; };\n      return iter.next();\n    }\n  };\n  iter[Symbol.iterator] = function() { return iter; };\n  return iter;\n};\n",
    "/*\n * Copyright 2016 The Closure Compiler Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n'require es6/util/iteratorfromarray';\n'require util/polyfill';\n\n// NOTE: Although Array.prototype.values was added to the 2015 edition of the\n// spec, we consider it an \"ES8\" feature because many browsers which are\n// otherwise ES6-compatible, have not implemented it due to web compatibility\n// issues. See https://bugs.chromium.org/p/chromium/issues/detail?id=615873\n$jscomp.polyfill('Array.prototype.values', function(orig) {\n  if (orig) return orig;\n\n  /**\n   * Returns an iterator of values of the given array.\n   *\n   * @this {!IArrayLike<VALUE>}\n   * @return {!IteratorIterable<VALUE>}\n   * @template VALUE\n   * @suppress {reportUnknownTypes}\n   */\n  var polyfill = function() {\n    return $jscomp.iteratorFromArray(this, function(k, v) { return v; });\n  };\n\n  return polyfill;\n}, 'es8', 'es3');\n",
    "/*\n * Copyright 2017 The Closure Compiler Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n'require util/owns';\n'require util/polyfill';\n\n$jscomp.polyfill('Object.entries', function(orig) {\n  if (orig) return orig;\n\n  /**\n   * Returns an array of [key, value] arrays, one for each entry\n   * in the given object.\n   *\n   * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/entries\n   *\n   * @param {!Object<KEY, VALUE>} obj\n   * @return {!Array<!Array<KEY|VALUE>>}\n   * @template KEY, VALUE\n   */\n  var entries = function(obj) {\n    var result = [];\n    for (var key in obj) {\n      if ($jscomp.owns(obj, key)) {\n        result.push([key, obj[key]]);\n      }\n    }\n    return result;\n  };\n\n  return entries;\n}, 'es8', 'es3');\n",
    "/*\n * Copyright 2016 The Closure Compiler Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n'require base';\n\n/**\n * Synonym for Object.prototype.hasOwnProperty.call(obj, prop).\n * @param {!Object} obj\n * @param {string} prop\n * @return {boolean}\n */\n$jscomp.owns = function(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n};\n",
    "/*\n * Copyright 2016 The Closure Compiler Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n'require base';\n\n\n/**\n * Throws if the argument is a RegExp, or if thisArg is undefined.\n * @param {?} thisArg The 'this' arg, which must be defined.\n * @param {*} arg The first argument of the function, which mustn't be a RegExp.\n * @param {string} func Name of the function, for reporting.\n * @return {string} The thisArg, coerced to a string.\n * @suppress {reportUnknownTypes}\n */\n$jscomp.checkStringArgs = function(thisArg, arg, func) {\n  if (thisArg == null) {\n    throw new TypeError(\n        \"The 'this' value for String.prototype.\" + func +\n        ' must not be null or undefined');\n  }\n  if (arg instanceof RegExp) {\n    throw new TypeError(\n        'First argument to String.prototype.' + func +\n        ' must not be a regular expression');\n  }\n  return thisArg + '';\n};\n",
    "/*\n * Copyright 2016 The Closure Compiler Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n'require util/checkstringargs';\n'require util/polyfill';\n\n$jscomp.polyfill('String.prototype.startsWith', function(orig) {\n  if (orig) return orig;\n\n  /**\n   * Tests whether the string starts with a given substring.\n   *\n   * <p>Polyfills the instance method String.prototype.startsWith().\n   *\n   * @this {string}\n   * @param {string} searchString\n   * @param {number=} opt_position\n   * @return {boolean}\n   */\n  var polyfill = function(searchString, opt_position) {\n    'use strict';\n    var string = $jscomp.checkStringArgs(this, searchString, 'startsWith');\n    searchString = searchString + '';\n    var strLen = string.length;\n    var searchLen = searchString.length;\n    var i = Math.max(\n        0,\n        Math.min(/** @type {number} */ (opt_position) | 0, string.length));\n    var j = 0;\n    while (j < searchLen && i < strLen) {\n      if (string[i++] != searchString[j++]) return false;\n    }\n    return j >= searchLen;\n  };\n\n  return polyfill;\n}, 'es6', 'es3');\n",
    "/*\n * Copyright 2016 The Closure Compiler Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n'require util/checkstringargs';\n'require util/polyfill';\n\n$jscomp.polyfill('String.prototype.repeat', function(orig) {\n  if (orig) return orig;\n\n  /**\n   * Returns a new string repeated the given number of times.\n   *\n   * <p>Polyfills the instance method String.prototype.repeat().\n   *\n   * @this {string}\n   * @param {number} copies\n   * @return {string}\n   */\n  var polyfill = function(copies) {\n    'use strict';\n    var string = $jscomp.checkStringArgs(this, null, 'repeat');\n    if (copies < 0 || copies > 0x4FFFFFFF) { // impose a 1GB limit\n      throw new RangeError('Invalid count value');\n    }\n    copies = copies | 0; // cast to a signed integer.\n    var result = '';\n    while (copies) {\n      if (copies & 1) result += string;\n      if ((copies >>>= 1)) string += string;\n    }\n    return result;\n  };\n\n  return polyfill;\n}, 'es6', 'es3');\n",
    "/* eslint-disable no-undef */\n/* start example */\nexport default preact\n\ntry {\n  /**\n   * @suppress {const}\n   */\n  window.preact = preact\n} catch (err) {\n  /**\n   * @suppress {const|checkTypes}\n   */\n  window.preact = {}\n}\n\nconst {\n  h,\n  createElement,\n  cloneElement,\n  createRef,\n  Component,\n  render,\n  rerender,\n  options,\n} = window.preact\n\nexport {\n  h,\n  createElement,\n  cloneElement,\n  createRef,\n  Component,\n  render,\n  rerender,\n  options,\n}\n/* end example */\n\n/* typal types/methods.xml namespace */\n\n/* typal types/options.xml namespace */\n\n/* typal types/vnode.xml namespace */\n\n/* typal types/component.xml namespace */\n",
    "import { h } from 'preact'\n/**\n * Help messages for form-group and inputs.\n */\nexport default function Help({ help, hid, invalid, valid }) {\n  let cc = 'text-muted'\n  if (invalid) cc = 'invalid-feedback'\n  else if (valid) cc = 'valid-feedback'\n  const c = `form-text ${cc}`\n  if (typeof help != 'string') {\n    return (  h('small',{'id':hid, 'className':c},\n      help,\n    ))\n  }\n  return (h('small',{'id':hid, 'className':c,\n    'dangerouslySetInnerHTML':{ __html: help }}))\n}",
    "/**\n * Allows for changes in values via properties, and for updates originated for the Form Model update via the context. Also fires onChange with the new value from properties.\n * @this {!preact.Component}\n */\nexport const shouldComponentUpdate = function (newProps, newContext) {\n  const { name, value } = this.props\n  const { value: newValue } = newProps\n  const newContextValue = this.context.values[name] != newContext.values[name]\n  if (newContextValue) return true\n\n  const nw = value != newValue\n  if (nw) {\n    if (newContext.onChange) newContext.onChange(newProps.name, newValue)\n    return false\n  }\n}\n\n/**\n * Extracts col classes from props and returns new props without them.\n * @param {!Object} props\n */\nexport const getClasses = (props) => {\n  const colClasses = []\n  const prop = Object.entries(props).reduce((acc, [key, value]) => {\n    if (key == 'col' || key.startsWith('col-')) {\n      colClasses.push(key)\n      return acc\n    }\n    acc[key] = value\n    return acc\n  }, {})\n  return { colClasses, prop }\n}",
    "import { h } from 'preact'\nimport { Component } from 'preact'\nimport Help from './help'\nimport { getClasses } from './lib';\n\n/**\n * The div with `form-group` class to hold the label, input, help and validation message.\n */\nexport default class FormGroup extends Component {\n  constructor() {\n    super()\n    this.id = `i${Math.floor(Math.random() * 100000)}`\n    this.hid = `h${this.id}`\n    /** @type {!_depackForm.FormGroupProps} */\n    this.props = this.props\n  }\n  getChildContext() {\n    return {\n      id: this.id,\n      hid: this.hid,\n    }\n  }\n  /**\n   * @param {!_depackForm.FormGroupProps} [props]\n   */\n  render({ children, label, help, details, className, 'form-row': formRow, row = formRow, labelClassName, ...props }) {\n    const c = [\n      'form-group', className,\n      row ? `${formRow ? 'form-' : ''}row` : null,\n    ]\n      .filter(Boolean).join(' ') || undefined\n\n    const { colClasses } = getClasses(props)\n\n    const lc = [row ? 'col-form-label' : null, labelClassName, ...colClasses]\n      .filter(Boolean).join(' ') || undefined\n\n    const lbl = label ?   h('label',{\n      'className':lc,\n      'htmlFor':this.id},label) : null\n\n    const he = ( h(Help,{help:help, hid:this.hid })) // ignore validation\n\n    if (details) {\n      return (\n                 h('details',{'className':c},\n          h('summary',{},\n            lbl,\n          ),\n          children,\n          row ? h('div',{'className':\"col-12\"},he) : he,\n        )\n      )\n    }\n\n    return (   h('div',{'className':c},\n      lbl,\n      children,\n      row ? h('div',{'className':\"col-12\"},he) : he,\n    ))\n  }\n}\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../types').FormGroupProps} _depackForm.FormGroupProps\n */",
    "/*\n * Copyright 2016 The Closure Compiler Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Polyfill for array destructuring.\n */\n'require es6/util/makeiterator';\n'require es6/util/arrayfromiterator';\n\n\n/**\n * Copies the values from an Iterable into an Array.\n * @param {string|!Array<T>|!Iterable<T>|!Arguments} iterable\n * @return {!Array<T>}\n * @template T\n */\n$jscomp.arrayFromIterable = function(iterable) {\n  if (iterable instanceof Array) {\n    return iterable;\n  } else {\n    return $jscomp.arrayFromIterator($jscomp.makeIterator(iterable));\n  }\n};\n",
    "export default function(url, options) {\n\toptions = options || {};\n\treturn new Promise( (resolve, reject) => {\n\t\tconst request = new XMLHttpRequest();\n\t\tconst keys = [];\n\t\tconst all = [];\n\t\tconst headers = {};\n\n\t\tconst response = () => ({\n\t\t\tok: (request.status/100|0) == 2,\t\t// 200-299\n\t\t\tstatusText: request.statusText,\n\t\t\tstatus: request.status,\n\t\t\turl: request.responseURL,\n\t\t\ttext: () => Promise.resolve(request.responseText),\n\t\t\tjson: () => Promise.resolve(JSON.parse(request.responseText)),\n\t\t\tblob: () => Promise.resolve(new Blob([request.response])),\n\t\t\tclone: response,\n\t\t\theaders: {\n\t\t\t\tkeys: () => keys,\n\t\t\t\tentries: () => all,\n\t\t\t\tget: n => headers[n.toLowerCase()],\n\t\t\t\thas: n => n.toLowerCase() in headers\n\t\t\t}\n\t\t});\n\n\t\trequest.open(options.method || 'get', url, true);\n\n\t\trequest.onload = () => {\n\t\t\trequest.getAllResponseHeaders().replace(/^(.*?):[^\\S\\n]*([\\s\\S]*?)$/gm, (m, key, value) => {\n\t\t\t\tkeys.push(key = key.toLowerCase());\n\t\t\t\tall.push([key, value]);\n\t\t\t\theaders[key] = headers[key] ? `${headers[key]},${value}` : value;\n\t\t\t});\n\t\t\tresolve(response());\n\t\t};\n\n\t\trequest.onerror = reject;\n\n\t\trequest.withCredentials = options.credentials=='include';\n\n\t\tfor (const i in options.headers) {\n\t\t\trequest.setRequestHeader(i, options.headers[i]);\n\t\t}\n\n\t\trequest.send(options.body || null);\n\t});\n}\n",
    "import { h } from 'preact'\nimport { Component } from 'preact'\n\nexport default class Form extends Component {\n  constructor() {\n    super()\n    this.state = {\n      values: {},\n    }\n    /** @type {!_depackForm.FormProps} */\n    this.props = this.props\n  }\n  getChildContext() {\n    return {\n      values: this.state.values,\n      onChange: this.onChange.bind(this),\n    }\n  }\n  onChange(name, value) {\n    this.setState({\n      values: {\n        ...this.state.values,\n        [name]: value,\n      },\n    })\n    if (this.props.onChange)\n      this.props.onChange(this.state.values)\n  }\n  render(props) {\n    const { children, formRef, onSubmit, onChange, ...prop } =\n      /** @type {!_depackForm.FormProps} */ (props)\n    return    h('form',{...prop,'ref':formRef, 'onSubmit':onSubmit},\n      children,\n    )\n  }\n}\n\nexport { default as FormGroup } from './form-group'\nexport { default as Select } from './Select'\nexport { default as TextArea } from './TextArea'\nexport { default as Input } from './Input'\nexport { default as SubmitForm } from './SubmitForm'\n\n/**\n * The button with `type=\"submit\"` which can be loading with a spinner indicator.\n * @param {!_depackForm.SubmitButtonProps} props Options for the SubmitButton component.\n */\nexport const SubmitButton = ({ disabled, loading, confirmText, loadingText = confirmText, className, type = 'primary', outline = false, ...props }) => {\n  const classes = ['btn', `btn-${outline ? 'outline-' : ''}${type}`, className].filter(Boolean)\n  return (h('button',{...props, 'className':classes.join(' '),'type':\"submit\", 'disabled':disabled || loading},\n    loading && h('span',{'className':`spinner-border spinner-border-sm${loadingText ? ' mr-2' : ''}`,'role':\"status\",'aria-hidden':\"true\"}),\n    loading ? loadingText : confirmText,\n  ))\n}\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../types').FormProps} _depackForm.FormProps\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../types').SubmitButtonProps} _depackForm.SubmitButtonProps\n */",
    "/* eslint-env browser */\nimport fetch from 'unfetch'\n\nfunction urlBase64ToUint8Array(base64String) {\n  const padding = '='.repeat((4 - base64String.length % 4) % 4)\n  const base64 = (base64String + padding)\n    .replace(/-/g, '+')\n    .replace(/_/g, '/')\n\n  const rawData = window.atob(base64)\n  const outputArray = new Uint8Array(rawData.length)\n\n  for (let i = 0; i < rawData.length; ++i) {\n    outputArray[i] = rawData.charCodeAt(i)\n  }\n  return outputArray\n}\n\n// ;(async() => {\n//   if ('serviceWorker' in navigator) {\n//     await send()\n//   }\n// })()\n\n/**\n * @param {PushSubscription} subscription\n */\nconst getSub = (subscription) => {\n  const { endpoint, 'keys': { 'p256dh': p256dh, 'auth': auth } } = JSON.parse(JSON.stringify(subscription))\n  return { endpoint, keys: { p256dh, auth } }\n}\n\nexport const checkSubscribed = async (register, host = '') => {\n  const sub = await register.pushManager.getSubscription()\n  try {\n    const { keys: { p256dh } } = getSub(sub)\n    const res = await fetch(`${host}/subscriptions?key=${p256dh}`)\n    const { 'comments': comments } = await res.json()\n    return { comments, p256dh }\n  } catch (err) {\n    return false\n  }\n}\n\nasync function send() {\n  const register = await navigator.serviceWorker.register('/service-worker.js', {\n    scope: '/',\n  })\n  try {\n    const isSubscribed = await checkSubscribed(register)\n    if (!isSubscribed) await subscribe(register)\n  } catch (err) {\n    console.error(err)\n    // subscription failed...\n  }\n}\n\nexport const subscribe = async (register, host = '', {\n  path = 'subscribe', method = 'POST', type = 'comments',\n} = {}) => {\n  const res = await fetch(`${host}/vapid`)\n  const vapidPublicKey = await res.text()\n  if (!vapidPublicKey) throw new Error('Could not fetch vapid key.')\n\n  const convertedVapidKey = urlBase64ToUint8Array(vapidPublicKey)\n  const subscription = await register.pushManager.subscribe({\n    userVisibleOnly: true,\n    applicationServerKey: convertedVapidKey,\n  })\n  const body = new FormData()\n  const { endpoint, keys: { p256dh, auth } } = getSub(subscription)\n  body.append('endpoint', endpoint)\n  body.append('p256dh', p256dh)\n  body.append('auth', auth)\n  body.append(type, 'true')\n  const f = await fetch(`${host}/${path}`, {\n    method,\n    body,\n  })\n  const data = await f.json()\n  return { p256dh }\n}"
  ],
  "names": [
    "$jscomp.arrayIteratorImpl",
    "$jscomp.objectCreate",
    "$jscomp.setPrototypeOf",
    "$jscomp.global",
    "$jscomp.defineProperty",
    "$jscomp.polyfill",
    "$jscomp.makeIterator",
    "$jscomp.initSymbol",
    "$jscomp.Symbol",
    "$jscomp.SymbolClass",
    "$jscomp.SYMBOL_PREFIX",
    "$jscomp.iteratorPrototype",
    "$jscomp.initSymbolIterator",
    "$jscomp.generator.Context",
    "$jscomp.asyncExecutePromiseGenerator",
    "$jscomp.generator.Generator_",
    "$jscomp.generator.Engine_",
    "$jscomp.iteratorFromArray",
    "$jscomp.checkStringArgs",
    "window",
    "preact",
    "err",
    "h",
    "Component",
    "render",
    "Help",
    "help",
    "hid",
    "valid",
    "cc",
    "invalid",
    "c",
    "__html",
    "getClasses",
    "props",
    "colClasses",
    "prop",
    "Object",
    "entries",
    "reduce",
    "acc",
    "key",
    "value",
    "startsWith",
    "push",
    "constructor",
    "FormGroup",
    "id",
    "Math",
    "floor",
    "random",
    "$jscomp.inherits",
    "getChildContext",
    "children",
    "label",
    "details",
    "className",
    "formRow",
    "row",
    "labelClassName",
    "filter",
    "Boolean",
    "join",
    "undefined",
    "lc",
    "$jscomp.arrayFromIterator",
    "lbl",
    "he",
    "url",
    "options",
    "Promise",
    "resolve",
    "reject",
    "response",
    "ok",
    "request",
    "statusText",
    "status",
    "text",
    "json",
    "JSON",
    "blob",
    "Blob",
    "clone",
    "headers",
    "keys",
    "all",
    "get",
    "n",
    "has",
    "XMLHttpRequest",
    "i",
    "onload",
    "m",
    "Form",
    "state",
    "values",
    "onChange",
    "bind",
    "name",
    "setState",
    "formRef",
    "onSubmit",
    "subscribe",
    "register",
    "host",
    "path",
    "method",
    "type",
    "res",
    "vapidPublicKey",
    "convertedVapidKey",
    "subscription",
    "body",
    "endpoint",
    "p256dh",
    "auth",
    "f",
    "$jscomp.asyncExecutePromiseGeneratorProgram",
    "fetch",
    "Error",
    "padding",
    "repeat",
    "length",
    "rawData",
    "atob",
    "replace",
    "base64",
    "outputArray",
    "Uint8Array",
    "charCodeAt",
    "pushManager",
    "userVisibleOnly",
    "applicationServerKey",
    "FormData",
    "parse",
    "stringify",
    "append",
    "Subscriptions",
    "getRegister",
    "navigator",
    "serviceWorker",
    "scope",
    "loading",
    "unsubscribe",
    "comments",
    "disabled",
    "ev",
    "currentTarget",
    "checked",
    "confirm",
    "App",
    "document",
    "getElementById"
  ]
}